---
controller_templates:
  - name: SERVER / RHEL7 - Register
    project: Automated Management
    playbook: server_register.yml
    inventory: SOE Inventory
    credentials:
      - SOE Credential
    limit: rhel7
    extra_vars:
      org_id: "Default_Organization"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: PREFIX
          required: false
        - question_name: Choose Environment
          type: multiplechoice
          variable: env
          choices:
            - Dev
            - Test
            - Prod
          required: true

  - name: SATELLITE / RHEL - Publish Content View
    project: Automated Management
    playbook: satellite_publish.yml
    inventory: SOE Inventory
    credentials:
      - Satellite Credential
    extra_vars:
      env: Dev
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Select Content View
          variable: content_view
          type: multiplechoice
          choices: "{{ hostvars['satellite.example.com']['foreman_content_views'] | selectattr('name', 'match', '^RHEL.*$') | map(attribute='name') | list}}"
          required: true

  - name: SATELLITE / RHEL - Promote Content View
    project: Automated Management
    playbook: satellite_promote.yml
    inventory: SOE Inventory
    credentials:
      - Satellite Credential
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Select Content View
          variable: content_view
          type: multiplechoice
          choices: "{{ hostvars['satellite.example.com']['foreman_content_views'] | selectattr('name', 'match', '^RHEL.*$') | map(attribute='name') | list}}"
          required: true
        - question_name: Current Lifecycle Environment
          variable: current_lifecycle_environment
          type: multiplechoice
          choices: "{{ hostvars['satellite.example.com']['lifecycle_environments'] | selectattr('name', 'match', '^RHEL.*$') | map(attribute='name') | list}}"
          required: true
        - question_name: Next Lifecycle Environment
          variable: lifecycle_environment
          type: multiplechoice
          choices: "{{ hostvars['satellite.example.com']['lifecycle_environments'] | selectattr('name', 'match', '^RHEL.*$') | map(attribute='name') | list}}"
          required: true

  - name: SATELLITE / Delete host(s) in "node_group"
    project: Automated Management
    playbook: satellite_delete_host.yml
    inventory: SOE Inventory
    credentials:
      - Satellite Credential
    extra_vars:
      node_group: env_RHEL7_Dev

  - name: SATELLITE / Transfer converted host(s) to another LE
    project: Automated Management
    playbook: satellite_transfer_host.yml
    inventory: ALL Development
    credentials:
      - Satellite Credential
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Select CentOS Lifecycle Environment to transfer nodes from
          variable: centos_lifecycle_environment
          type: multiplechoice
          choices: "{{ hostvars['satellite.example.com']['lifecycle_environments'] | selectattr('name', 'match', '^CentOS.*$') | map(attribute='name') | list}}"
          required: true
        - question_name: Select target RHEL Lifecycle Environment
          variable: rhel_lifecycle_environment
          type: multiplechoice
          choices: "{{ hostvars['satellite.example.com']['lifecycle_environments'] | selectattr('name', 'match', '^RHEL.*$') | map(attribute='name') | list}}"
          required: true

  - name: SERVER / RHEL7 - Patch
    project: Automated Management
    playbook: server_patch.yml
    inventory: RHEL7 Development
    use_fact_cache: true
    credentials:
      - SOE Credential
    limit: ''
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Select Environment
          type: multiplechoice
          variable: lifecycle_stage
          choices: "{{ hostvars['satellite.example.com']['lifecycle_environments'] | selectattr('name', 'match', '^RHEL.*$') | map(attribute='name') | list}}"
          required: true
        - question_name: Check
          type: multiplechoice
          variable: check_only
          choices:
            - 'yes'
            - 'no'
          required: true

  - name: SERVER / RHEL7 - Fact Scan
    project: Fact Scan
    playbook: scan_facts.yml
    inventory: RHEL7 Development
    ask_limit_on_launch: true
    use_fact_cache: true
    credentials:
      - SOE Credential
    limit: ''

  - name: SERVER / Start node via ec2_node_tools
    description: Start node - selection via EC2 instance tags
    project: Automated Management
    playbook: node_startup.yml
    inventory: SOE Inventory
    limit: control
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"
      instances:
        tags:
          guid: "{{ lookup('env', 'AWX_HOST' ).split('.')[1] }}"
          Student: "{{ lookup('env', 'AWX_HOST').split('.')[0] | urlsplit('hostname') }}"
          short_name: node*

  - name: SERVER / Stop node via ec2_node_tools
    description: Stop node - selection via EC2 instance tags
    project: Automated Management
    playbook: node_shutdown.yml
    inventory: SOE Inventory
    limit: control
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"
      instances:
        tags:
          guid: "{{ lookup('env', 'AWX_HOST' ).split('.')[1] }}"
          Student: "{{ lookup('env', 'AWX_HOST').split('.')[0] | urlsplit('hostname') }}"
          short_name: node*

  - name: CONVERT2RHEL / 01 - Take node snapshot
    description: Take node snapshot - selection via EC2 instance tags
    project: Automated Management
    playbook: snapshot_instance.yml
    inventory: SOE Inventory
    limit: control
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"
      instances:
        tags:
          short_name: node*
          guid: "{{ lookup('env', 'AWX_HOST' ).split('.')[1] }}"
          Student: "{{ lookup('env', 'AWX_HOST').split('.')[0] | urlsplit('hostname') }}"

  - name: CONVERT2RHEL / 02 - Upgrade OS to latest release
    description: Upgrade OS to latest available packages
    project: Automated Management
    playbook: upgrade_instance.yml
    inventory: RHEL7 Development
    credentials:
      - SOE Credential
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"

  - name: CONVERT2RHEL / 95 - Three Tier App stack bounce
    description: Bounce three tier app
    project: Three Tier App / Dev
    playbook: Bounce_3TA_AWS.yml
    inventory: RHEL7 Development
    credentials:
      - SOE Credential

  - name: CONVERT2RHEL / 96 - Three Tier App deployment
    description: Deploy three tier app
    project: Three Tier App / Dev
    playbook: Configure_3TA_AWS.yml
    inventory: RHEL7 Development
    credentials:
      - SOE Credential
    extra_vars:
      pg_db_name: db01
      pg_db_user: user01
      pg_db_passwd: Xtr4Sup3rS3cr3tP4ssw0rd?!

  - name: CONVERT2RHEL / 97 - Three Tier App smoke test
    description: Smoke test three tier app
    project: Three Tier App / Dev
    playbook: SmokeTest_3TA_AWS.yml
    inventory: RHEL7 Development
    credentials:
      - SOE Credential
    extra_vars:
      pg_db_name: db01
      pg_db_user: user01
      pg_db_passwd: Xtr4Sup3rS3cr3tP4ssw0rd?!

  - name: CONVERT2RHEL / 98 - Revert node state via snapshot
    description: Revert via snapshot - selection via EC2 instance tags
    project: Automated Management
    playbook: snapshot_revert.yml
    inventory: SOE Inventory
    limit: control
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"
      instances:
        tags:
          guid: "{{ lookup('env', 'AWX_HOST' ).split('.')[1] }}"
          Student: "{{ lookup('env', 'AWX_HOST').split('.')[0] | urlsplit('hostname') }}"
          username: ec2-user

  - name: CONVERT2RHEL / 99 - Delete snapshot
    description: Delete snapshot - selection via EC2 snapshot tags
    project: Automated Management
    playbook: snapshot_delete.yml
    inventory: SOE Inventory
    limit: control
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"
      snapshots:
        tags:
          guid: "{{ lookup('env', 'AWX_HOST' ).split('.')[1] }}"
          Student: "{{ lookup('env', 'AWX_HOST').split('.')[0] | urlsplit('hostname') }}"

  - name: EC2 / Set instance tags based on Satellite(Foreman) facts
    description: Set instance tags - selection via existing EC2 instance tags
    project: Automated Management
    playbook: query_satellite_resource_info_hosts_set_instance_tags.yml
    inventory: SOE Inventory
    credentials:
      - Satellite Credential
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"
      instances:
        tags:
          guid: "{{ lookup('env', 'AWX_HOST' ).split('.')[1] }}"
          Student: "{{ lookup('env', 'AWX_HOST').split('.')[0] | urlsplit('hostname') }}"
          short_name: node*

  - name: EC2 / Set instance tag - AnsibleGroup
    description: Set instance tag - AnsibleGroup via provided extra_vars dict
    project: Automated Management
    playbook: set_instance_tags.yml
    inventory: SOE Inventory
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"
      instances:
        tags:
          guid: "{{ lookup('env', 'AWX_HOST' ).split('.')[1] }}"
          Student: "{{ lookup('env', 'AWX_HOST').split('.')[0] | urlsplit('hostname') }}"
          short_name: node*
      group_tag_map:
        node1.example.com: frontends
        node2.example.com: apps
        node3.example.com: appdbs

  - name: EC2 / Get instance details via ec2_node_tools role
    description: Utilize ec2_node_tools role to display info available per instance/node
    project: Automated Management
    playbook: node_details_via_ec2_node_tools.yml
    inventory: SOE Inventory
    credentials:
      - SOE Credential
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"
      instances:
        tags:
          guid: "{{ lookup('env', 'AWX_HOST' ).split('.')[1] }}"
          Student: "{{ lookup('env', 'AWX_HOST').split('.')[0] | urlsplit('hostname') }}"
          short_name: node*

  - name: EC2 / Update Route53
    description: Update Route53 records with external IPs
    project: Automated Management
    playbook: refresh_route53_dns.yml
    inventory: SOE Inventory
    credentials:
      - SOE Credential
    extra_vars:
      ec2_region: "{{ workshop_ec2_region }}"
      instances:
        tags:
          scenario: "{{ lookup('env', 'AWX_HOST' ).split('.')[1] }}"
      student: "{{ lookup('env', 'AWX_HOST').split('.')[0] | urlsplit('hostname') }}"
      workshop_dns_zone: "{{ lookup('env', 'AWX_HOST').split('.',2)[2] }}"

  - name: CONTROLLER / Update inventories via dynamic sources
    project: Automated Management
    playbook: controller_inventory_source_update.yml
    inventory: SOE Inventory
    credentials:
      - Controller Credential
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Select inventory to update
          variable: content_view
          type: multiplechoice
          choices: "{{ hostvars['satellite.example.com']['foreman_content_views'] | selectattr('name', 'defined') | map(attribute='name') | list}}"
          required: true
        - question_name: Choose Environment
          type: multiplechoice
          variable: env
          choices:
            - Dev
            - Test
            - Prod
          required: true
